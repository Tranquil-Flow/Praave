/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BeefyVaultMergedV6V7,
  BeefyVaultMergedV6V7Interface,
} from "../../../vault/beefy/BeefyVaultMergedV6V7";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class BeefyVaultMergedV6V7__factory {
  static readonly abi = _abi;
  static createInterface(): BeefyVaultMergedV6V7Interface {
    return new Interface(_abi) as BeefyVaultMergedV6V7Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BeefyVaultMergedV6V7 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BeefyVaultMergedV6V7;
  }
}
